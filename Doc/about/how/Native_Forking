Forking=<b>Forking</b> is the software community's word for taking something that exists and doing something new with it.

CopyFork=<b>Copy Fork</b> A fork can be done by making a copy of the content and working on it.  Disconnecting it from the source.  (That is how the legal community works documents.  Each draft is a complete copy, disconnected from the prior.  Redlining is a post-hoc, manual connection of the two.)

GitFork=<b>Git Fork</b>. Git treats all work as a fork.  It makes a copy (like with Copy Fork) but keeps a backtrace to the source.  So it can be treated as a version and retain a history.  It eliminates the problems of version control and most of the problems of collaboration as lawyers know them.

NativeFork=<b>Native Forking</b> A subsequent draft or repurposing of a document is done in CommonAccord by linking to the precedents.  You reference the source and then express the differences as overrides.  This has advantages.  The relationships are expressly labeled, can be counted and calculated.  It builds up like a portfolio, or 3D printing. 

How=To create a new use, version, or variant of something, create a new file and reference the prior one as

Doc.Meta=Go ahead, make a new page, point at this one and fork it.

Next=[about/how/Native_Forking_Improved]

Model.Root={Doc.Meta}<br>{FeedMe!}<br>{Forking}<br>{CopyFork}<br>{GitFork}<br>{NativeFork}<br>{How} 



 			  